 -----
 Release Notes for Apache Helix 0.9.9
 -----

~~ Licensed to the Apache Software Foundation (ASF) under one
~~ or more contributor license agreements.  See the NOTICE file
~~ distributed with this work for additional information
~~ regarding copyright ownership.  The ASF licenses this file
~~ to you under the Apache License, Version 2.0 (the
~~ "License"); you may not use this file except in compliance
~~ with the License.  You may obtain a copy of the License at
~~
~~   http://www.apache.org/licenses/LICENSE-2.0
~~
~~ Unless required by applicable law or agreed to in writing,
~~ software distributed under the License is distributed on an
~~ "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
~~ KIND, either express or implied.  See the License for the
~~ specific language governing permissions and limitations
~~ under the License.

~~ NOTE: For help with the syntax of this file, see:
~~ http://maven.apache.org/guides/mini/guide-apt-format.html

Release Notes for Apache Helix 0.9.9

  The Apache Helix team would like to announce the release of Apache Helix 0.9.9.

  This is the twenty-third release under the Apache umbrella, and the nineteenth as a top-level project.

  Helix is a generic cluster management framework used for the automatic management of partitioned, replicated and distributed resources hosted on a cluster of nodes.


[]

* Key Note for Helix Release

  In this release, there are three type of configuration for ZK write limitations:

    * jute.maxbuffer: This used to be consistent with jute maxbuffer set for ZkClient. So if your data size is over this value, write is not allowed.

    * zk.serializer.znrecord.write.size.limit.bytes: If the ZNode size is larger than the value you set (even after compression), the data will NOT be written to ZK at ZNRecorderSerializer level. Default is 1MB

    * zk.serializer.znrecord.auto-compress.threshold.bytes: If the ZNode size is larger than the value you set, compression will be applied for this ZNode.

[]

* Detailed Changes

** Improvements

    * Add separate ZK serializer configuration to active ZNRecord compression when size exceeds a threshold. #1901

    * Validate data write size limit in ZkClient #1072

[]

Cheers,
--
The Apache Helix Team
